---
title: "Day 0 - Making Sure Everything Works"
format: html
---

# Setting Up R and Rstudio

R and RStudio installations are needed for our interactive exercises (I would recommend installing the newest versions of both R and Rstudio). The setup is intuitive. Kindly follow the [**instructions**](https://rstudio-education.github.io/hopr/starting.html) to install the necessary components.

# Downloading the Public GitHub Repository

1.  **Open the Repository in a Web Browser**:

    -   Navigate to the provided URL: [**https://github.com/MatthiasUckert/RpMMA24-Code**](https://github.com/MatthiasUckert/RpMMA24-Code)

2.  **Find the 'Code' Button**:

    -   On the main page of the repository, you'll see a green button labeled "Code".

3.  **Download as ZIP**:

    -   Click on the "Code" button.

    -   In the dropdown menu, you'll see an option to "Download ZIP". Click on this option.

    -   This will start downloading the entire repository as a ZIP file to your computer.

4.  **Extract the ZIP File**:

    -   Once the download is complete, navigate to the location where the ZIP file was saved (typically the "Downloads" folder).

    -   Right-click on the ZIP file (named **`RpMMA24-Code-main.zip`** or similar) and choose the option to "Extract All" (the exact wording might vary depending on your operating system).

    -   Choose a destination folder for the extracted files and click "Extract".

5.  **Open the R Project**:

    -   Navigate to the extracted folder.

    -   Inside, you should find a file with the **`.Rproj`** extension, which represents the R Project.

    -   If you have RStudio installed, you can double-click on this **`.Rproj`** file to open the project in RStudio. If not, you can still navigate through the folder and open individual R scripts using any text editor or R itself.

# Restoring the Project from the renv Lockfile

In this section, we will restore the project's R packages using the **`renv.lock`** file. This ensures that all students have the same package versions for consistency and reproducibility.

1.  Make sure you have the **`renv`** package installed.

```{r}
#| eval: false
install.packages("renv")
```

2.  Initialize the renv project with this command:

```{r}
#| eval: false
renv::init()
```

**You should see the following output:**

*`This project already has a lockfile. What would you like to do?`*

*`1: Restore the project from the lockfile.`*

*`2: Discard the lockfile and re-initialize the project.`*

*`3: Activate the project without snapshotting or installing any packages.`*

*`4: Abort project initialization.`*

*`Selection:`*

**Type 1 and click enter**

This should now install all necessary dependencies onto you computer (depending on your internet connection and computer specs this process might take 5 minutes or more). If you encounter any error during the installation, just try to reintsall the package using: `install.packages("PACKAGENAME)`.

3.  Finish initialization with the following command:

```{r}
#| eval: false
renv::restore()
```

**You should see the following output:**

*`It looks like you've called renv::restore() in a project that hasn't been activated yet. How would you like to proceed?`*

*`1: Activate the project and use the project library.`*

*`2: Do not activate the project and use the current library paths.`*

*`3: Cancel and resolve the situation another way.`*

*`Selection:`*

**Type 1 and click enter**
